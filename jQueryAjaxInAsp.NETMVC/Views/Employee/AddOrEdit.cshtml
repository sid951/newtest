@model jQueryAjaxInAsp.NETMVC.Models.ViewModel.EmployeeModel

@{ ViewBag.Title = "AddOrEdit";
    Layout = null; }


@using (Html.BeginForm("AddOrEdit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "Employee", new { id = 0 }) }))//data-resetUrl
{
@Html.AntiForgeryToken()
                <div class="row">
                    <div class="form-horizontal col-md-9">
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.EmployeeID)
                        @Html.HiddenFor(model => model.ImagePath)

                        <div class="col-md-6">
                            @if (Model.EmployeeID == 0)
                            {
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Password)
                                    </div>

                                </div>}
                            <div class="form-group">
                                @Html.LabelFor(model => model.Position, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Position)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Contact, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Contact, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Contact)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Age, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Age)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Office, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Office)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Salary, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Salary)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfJoining, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.DateOfJoining, new { @class = "form-control", id = "datetimepicker4" })
                                    @Html.ValidationMessageFor(model => model.DateOfJoining)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address1)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address2)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.State, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.State)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Pincode, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Pincode)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-5 col-md-10">
                                <input type="submit" value="Submit" class="btn btn-primary" />
                                @if (Model.EmployeeID != 0)
                                {
                <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddOrEdit", "Employee", new { id = 0 })',false)"><i class="fa fa-plus"></i> Add New</a>}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ImagePath, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <img src="@Url.Content(Model.ImagePath)" style="margin:10px" height="200" width="200" id="imagePreview" />
                                <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                            </div>
                        </div>
                    </div>

                </div>}



 @Scripts.Render("~/bundles/jqueryval");
                @Scripts.Render("~/bundles/bootstrap");
               
<script type="text/javascript">
    $(document).ready(function () {
        $('#datetimepicker4').datetimepicker();
    })
</script>


